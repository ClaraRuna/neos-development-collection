Flowpack:
  JobQueue:
    Common:
      queues:
        # By default we use the Fake Queue that doesn't need a background process
        # For better performance/scale you should consider using a proper job queue backend
        # See https://github.com/Flowpack/jobqueue-common for more details
        'neos-contentCacheFlusher':
          className: 'Flowpack\JobQueue\Common\Queue\FakeQueue'
          options:
            async: true


Neos:
  EventSourcedNeosAdjustments:
    # TODO: re-enable cache!!
    fusion:
      enableObjectTreeCache: false
  Flow:
    http:
      middlewares:
        'detectContentSubgraph':
          position: 'before routing'
          middleware: 'Neos\Neos\EventSourcedRouting\Http\DetectContentSubgraphMiddleware'
    error:
      debugger:
        ignoredClasses:
          'Neos\\ContentRepository\\Domain\\Model\\NodeType': true
          'Neos\\Eel\\CompilingEvaluator': true
          'Neos\\EventSourcedContentRepository\\Domain\\Projection\\Content\\PropertyCollection': true
          'Neos\\Fusion\\FusionObjects\\Helpers\\FusionPathProxy': true
          'Neos\\ContentRepository\\Domain\\Service\\NodeTypeManager': true
          'Neos\\ContentRepository\\DimensionSpace\\DimensionSpace\\DimensionSpacePoint.*': true
  Neos:
    fusion:
      autoInclude:
        Neos.EventSourcedNeosAdjustments: true
    Ui:
      initialState:
        cr:
          nodes:
            byContextPath: '${Neos.EventSourcedNeosAdjustments.Ui.NodeInfo.defaultNodesForBackend(site, documentNode, controllerContext)}'
            siteNode: '${Neos.EventSourcedNeosAdjustments.Ui.NodeInfo.serializedNodeAddress(site)}'
            documentNode: '${Neos.EventSourcedNeosAdjustments.Ui.NodeInfo.serializedNodeAddress(documentNode)}'
          contentDimensions:
            # TODO: re-enable dimensions
            byName: '${Neos.EventSourcedNeosAdjustments.Ui.ContentDimensions.contentDimensionsByName()}'
            active: '${subgraph.dimensionSpacePoint.toLegacyDimensionArray()}'
            allowedPresets: '${Neos.EventSourcedNeosAdjustments.Ui.ContentDimensions.allowedPresetsByName(documentNode.dimensionSpacePoint)}'
          workspaces:
            personalWorkspace: '${Neos.EventSourcedNeosAdjustments.Workspace.getPersonalWorkspace()}'
        ui:
          contentCanvas:
            src: '${Neos.EventSourcedNeosAdjustments.Ui.NodeInfo.previewUri(documentNode, controllerContext)}'
            contextPath: '${Neos.EventSourcedNeosAdjustments.Ui.NodeInfo.serializedNodeAddress(documentNode)}'
      documentNodeInformation:
        metaData:
          documentNode: '${Neos.EventSourcedNeosAdjustments.Ui.NodeInfo.serializedNodeAddress(documentNode)}'
          siteNode: '${Neos.EventSourcedNeosAdjustments.Ui.NodeInfo.serializedNodeAddress(site)}'

          previewUrl: '${documentNode == null ? "" : Neos.EventSourcedNeosAdjustments.Ui.NodeInfo.redirectUri(documentNode, controllerContext)}'

          contentDimensions:
            active: '${documentNode.dimensionSpacePoint.toLegacyDimensionArray()}'
            allowedPresets: '${Neos.EventSourcedNeosAdjustments.Ui.ContentDimensions.allowedPresetsByName(documentNode.dimensionSpacePoint)}'
          documentNodeSerialization: '${Neos.EventSourcedNeosAdjustments.Ui.NodeInfo.renderNodeWithPropertiesAndChildrenInformation(documentNode, controllerContext)}'
          url: '${Neos.EventSourcedNeosAdjustments.Ui.NodeInfo.previewUri(documentNode, controllerContext)}'
