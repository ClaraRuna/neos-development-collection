name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    name: "PHP ${{ matrix.php-versions }} Test (deps: ${{ matrix.dependencies }})"

    continue-on-error: ${{ matrix.experimental }}

    strategy:
      fail-fast: false
      matrix:
        php-versions: ['7.4']
        dependencies: ['highest']
        composer-arguments: [''] # to run --ignore-platform-reqs in experimental builds
        experimental: [false]
        #include:
          # Experimental build for PHP nightly
          #- php-versions: 'nightly'
          #  composer-arguments: '--ignore-platform-reqs'
          #  experimental: true
          #  dependencies: 'highest'

          # Build for minimum dependencies.
          #- php-versions: '7.4'
          #  experimental: false
          #  dependencies: 'lowest'

    runs-on: ubuntu-20.04
    services:
      mariadb:
        image: mariadb:10.2
        env:
          MYSQL_USER: neos
          MYSQL_PASSWORD: neos
          MYSQL_DATABASE: flow_functional_testing
          MYSQL_ROOT_PASSWORD: neos
        ports:
          - "3306:3306"
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    env:
      FLOW_CONTEXT: Testing
      NEOS_TARGET_VERSION: master
      NEOS_DIST_FOLDER: neos-development-distribution
      NEOS_CR_FOLDER: contentrepository-development-collection

    defaults:
      run:
        working-directory: ${{ env.NEOS_DIST_FOLDER }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: ${{ env.NEOS_CR_FOLDER }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, json, zlib, iconv, intl, pdo_sqlite, mysql, pgsql, redis, memcached, memcache, apcu
          coverage: xdebug #optional
          ini-values: date.timezone="Africa/Tunis", opcache.fast_shutdown=0, apc.enable_cli=on

      - name: Checkout development distribution
        uses: actions/checkout@v2
        with:
          repository: neos/neos-development-distribution
          ref: ${{ env.NEOS_TARGET_VERSION }}
          path: ${{ env.NEOS_DIST_FOLDER }}

      - name: Update composer.json
        run: |
          git -C ../${{ env.NEOS_CR_FOLDER }} checkout -b build
          cp ../${{ env.NEOS_CR_FOLDER }}/.travis_composer.json ./composer.json
          cat composer.json

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/composer
            ${{ env.NEOS_DIST_FOLDER }}/Packages
          key: php-${{ matrix.php-versions }}-${{ matrix.dependencies }}${{ hashFiles('**/composer.json') }}
          restore-keys: php-${{ matrix.php-versions }}-${{ matrix.dependencies }}

      - name: Install dependencies
        run: |
          composer ${{ matrix.dependencies == 'locked' && 'install' || 'update' }} --no-progress --no-interaction ${{ matrix.dependencies == 'lowest' && '--prefer-lowest' || '' }} ${{ matrix.composer-arguments }}
          rm -rf Packages/CR
          mv ../${{ env.NEOS_CR_FOLDER }} Packages/CR
          ./flow flow:package:rescan

      - name: Set Flow Context
        run: echo "FLOW_CONTEXT=${{ env.FLOW_CONTEXT }}" >> $GITHUB_ENV

      - name: Setup Flow configuration
        run: |
          rm -f Configuration/Routes.yaml
          rm -f Configuration/Testing/Settings.yaml
          cat <<EOF >> Configuration/Testing/Settings.yaml
          Neos:
            Flow:
              persistence:
                backendOptions:
                  host: '127.0.0.1'
                  driver: pdo_mysql
                  user: 'neos'
                  password: 'neos'
                  dbname: 'flow_functional_testing'
              mvc:
                routes:
                  'Neos.Flow': TRUE
          EOF
          echo "Running in context '$FLOW_CONTEXT'"

      - name: Run functional tests
        run: |
          bin/phpunit --colors --stop-on-failure -c Build/BuildEssentials/PhpUnit/FunctionalTests.xml Packages/CR/Neos.EventSourcedContentRepository/Tests/Functional
          bin/phpunit --colors --stop-on-failure -c Build/BuildEssentials/PhpUnit/FunctionalTests.xml Packages/CR/Neos.EventSourcedNeosAdjustments/Tests/Functional

      - name: Run behat tests
        #if: env.BEHAT == true
        run: |
          ./flow behat:setup
          bin/behat -f progress -c Packages/CR/Neos.ContentRepository.BehavioralTests/Tests/Behavior/behat.yml.dist
          bin/behat -f progress -c Packages/CR/Neos.ContentGraph.DoctrineDbalAdapter/Tests/Behavior/behat.yml.dist
          cd Packages/CR/Neos.EventSourcedNeosAdjustments/Tests/Behavior
          ../../../../../bin/behat -f progress -c behat.yml.dist Features/Routing
          # TODO add the non-routing tests as well

  buildall:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    name: CI build (matrix)
    needs: build
    steps:
      - name: Check build matrix status
        if: ${{ needs.build.result != 'success' }}
        run: exit 1
